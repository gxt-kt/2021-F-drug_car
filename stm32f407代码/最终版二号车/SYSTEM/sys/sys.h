#ifndef __SYS_H
#define __SYS_H	 
#include "stm32f4xx.h" 
#include <string.h> 
#include <stdio.h>
#include <stdint.h>
#include <stdlib.h>
#include <math.h>
#include "delay.h"
#include "usart1.h"
#include "send_data.h"
#include "exti.h"
#include "led.h"
#include "tim6.h"
#include "tim14.h"
#include "sonic.h"
#include "motor_shuanghuan.h"
#include "myiic.h"
#include "oled.h"
#include "ws2812.h"
#include "sbus_usart2.h"
#include "my_task.h"
#include "encoder.h"
#include "qy3806_abs.h"
#include "tim8.h"
#include "w25qxx.h"
#include "spi.h"
#include "usart3.h"
#include "adc.h"
#include "pid.h"
#include "key.h"
#include "V7_data_deal.h"
#include "ak8975.h"
#include "attitude_up.h"
#include "ICM20602.h"
#include "SPL06_001.h"
#include "imu_spi.h"
#include "watch_dog.h"
#include "balance_init.h"
#include "balance_control.h"
#include "onefly_control.h"
#include "banqiu.h"
#include "my_algorithm.h"
#include "fenglibai.h"
#include "balance_car.h"
#include "car_init.h"
#include "car_other.h"
#include "car_ctrl.h"
#include "car_uart1.h"
#include "car_uart2.h"
#include "MOTOR_CTRL.h"
#include "k210it.h"
#include "ctrl_num.h"
#include "DRIVER.h"
#include "task1.h"
#include "task2.h"
#include "task3.h"
extern char sss[];
extern long long int system_time;
//0,ï¿½ï¿½Ö§ï¿½ï¿½ucos
//1,Ö§ï¿½ï¿½ucos
#define SYSTEM_SUPPORT_OS		0		//ï¿½ï¿½ï¿½ï¿½ÏµÍ³ï¿½Ä¼ï¿½ï¿½ï¿½ï¿½Ç·ï¿½Ö§ï¿½ï¿½UCOS
																	    
	 
//Î»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½,Êµï¿½ï¿½51ï¿½ï¿½ï¿½Æµï¿½GPIOï¿½ï¿½ï¿½Æ¹ï¿½ï¿½ï¿½
//ï¿½ï¿½ï¿½ï¿½Êµï¿½ï¿½Ë¼ï¿½ï¿½,ï¿½Î¿ï¿½<<CM3È¨ï¿½ï¿½Ö¸ï¿½ï¿½>>ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½(87Ò³~92Ò³).M4Í¬M3ï¿½ï¿½ï¿½ï¿½,Ö»ï¿½Ç¼Ä´ï¿½ï¿½ï¿½ï¿½ï¿½Ö·ï¿½ï¿½ï¿½ï¿½.
//IOï¿½Ú²ï¿½ï¿½ï¿½ï¿½ê¶¨ï¿½ï¿½
#define BITBAND(addr, bitnum) ((addr & 0xF0000000)+0x2000000+((addr &0xFFFFF)<<5)+(bitnum<<2)) 
#define MEM_ADDR(addr)  *((volatile unsigned long  *)(addr)) 
#define BIT_ADDR(addr, bitnum)   MEM_ADDR(BITBAND(addr, bitnum)) 
//IOï¿½Úµï¿½Ö·Ó³ï¿½ï¿½
#define GPIOA_ODR_Addr    (GPIOA_BASE+20) //0x40020014
#define GPIOB_ODR_Addr    (GPIOB_BASE+20) //0x40020414 
#define GPIOC_ODR_Addr    (GPIOC_BASE+20) //0x40020814 
#define GPIOD_ODR_Addr    (GPIOD_BASE+20) //0x40020C14 
#define GPIOE_ODR_Addr    (GPIOE_BASE+20) //0x40021014 
#define GPIOF_ODR_Addr    (GPIOF_BASE+20) //0x40021414    
#define GPIOG_ODR_Addr    (GPIOG_BASE+20) //0x40021814   
#define GPIOH_ODR_Addr    (GPIOH_BASE+20) //0x40021C14    
#define GPIOI_ODR_Addr    (GPIOI_BASE+20) //0x40022014     

#define GPIOA_IDR_Addr    (GPIOA_BASE+16) //0x40020010 
#define GPIOB_IDR_Addr    (GPIOB_BASE+16) //0x40020410 
#define GPIOC_IDR_Addr    (GPIOC_BASE+16) //0x40020810 
#define GPIOD_IDR_Addr    (GPIOD_BASE+16) //0x40020C10 
#define GPIOE_IDR_Addr    (GPIOE_BASE+16) //0x40021010 
#define GPIOF_IDR_Addr    (GPIOF_BASE+16) //0x40021410 
#define GPIOG_IDR_Addr    (GPIOG_BASE+16) //0x40021810 
#define GPIOH_IDR_Addr    (GPIOH_BASE+16) //0x40021C10 
#define GPIOI_IDR_Addr    (GPIOI_BASE+16) //0x40022010 
 
//IOï¿½Ú²ï¿½ï¿½ï¿½,Ö»ï¿½Ôµï¿½Ò»ï¿½ï¿½IOï¿½ï¿½!
//È·ï¿½ï¿½nï¿½ï¿½ÖµÐ¡ï¿½ï¿½16!
#define PAout(n)   BIT_ADDR(GPIOA_ODR_Addr,n)  //ï¿½ï¿½ï¿? 
#define PAin(n)    BIT_ADDR(GPIOA_IDR_Addr,n)  //ï¿½ï¿½ï¿½ï¿½ 

#define PBout(n)   BIT_ADDR(GPIOB_ODR_Addr,n)  //ï¿½ï¿½ï¿? 
#define PBin(n)    BIT_ADDR(GPIOB_IDR_Addr,n)  //ï¿½ï¿½ï¿½ï¿½ 

#define PCout(n)   BIT_ADDR(GPIOC_ODR_Addr,n)  //ï¿½ï¿½ï¿? 
#define PCin(n)    BIT_ADDR(GPIOC_IDR_Addr,n)  //ï¿½ï¿½ï¿½ï¿½ 

#define PDout(n)   BIT_ADDR(GPIOD_ODR_Addr,n)  //ï¿½ï¿½ï¿? 
#define PDin(n)    BIT_ADDR(GPIOD_IDR_Addr,n)  //ï¿½ï¿½ï¿½ï¿½ 

#define PEout(n)   BIT_ADDR(GPIOE_ODR_Addr,n)  //ï¿½ï¿½ï¿? 
#define PEin(n)    BIT_ADDR(GPIOE_IDR_Addr,n) //ï¿½ï¿½ï¿½ï¿½

#define PFout(n)   BIT_ADDR(GPIOF_ODR_Addr,n)  //ï¿½ï¿½ï¿? 
#define PFin(n)    BIT_ADDR(GPIOF_IDR_Addr,n)  //ï¿½ï¿½ï¿½ï¿½

#define PGout(n)   BIT_ADDR(GPIOG_ODR_Addr,n)  //ï¿½ï¿½ï¿? 
#define PGin(n)    BIT_ADDR(GPIOG_IDR_Addr,n)  //ï¿½ï¿½ï¿½ï¿½

#define PHout(n)   BIT_ADDR(GPIOH_ODR_Addr,n)  //ï¿½ï¿½ï¿? 
#define PHin(n)    BIT_ADDR(GPIOH_IDR_Addr,n)  //ï¿½ï¿½ï¿½ï¿½

#define PIout(n)   BIT_ADDR(GPIOI_ODR_Addr,n)  //ï¿½ï¿½ï¿? 
#define PIin(n)    BIT_ADDR(GPIOI_IDR_Addr,n)  //ï¿½ï¿½ï¿½ï¿½

//ï¿½ï¿½ï¿½ï¿½Îªï¿½ï¿½àº?ï¿½ï¿½
void WFI_SET(void);		//Ö´ï¿½ï¿½WFIÖ¸ï¿½ï¿½
void INTX_DISABLE(void);//ï¿½Ø±ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ð¶ï¿½
void INTX_ENABLE(void);	//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ð¶ï¿½
void MSR_MSP(u32 addr);	//ï¿½ï¿½ï¿½Ã¶ï¿½Õ»ï¿½ï¿½Ö· 

int gxt_abs(int a);

#endif





